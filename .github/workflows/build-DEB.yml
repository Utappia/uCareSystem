name: Build DEB Package

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  release:
    types: [published]

jobs:
  build-deb:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          devscripts \
          debhelper \
          dh-make \
          build-essential \
          lintian \
          fakeroot \
          dpkg-dev \
          git-buildpackage
    
    - name: Get version information
      id: version
      run: |
        if [ -f VERSION ]; then
          VERSION=$(cat VERSION)
        else
          VERSION=$(grep -o 'UCARE_VERSION="[^"]*"' ucaresystem-core | cut -d'"' -f2 || echo "25.06.05")
        fi
        
        # Ensure VERSION is not empty and starts with a digit
        if [ -z "$VERSION" ] || [[ ! "$VERSION" =~ ^[0-9] ]]; then
          VERSION="25.06.05"
        fi
        
        echo "Detected base version: $VERSION"
        
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "debian_version=$VERSION-1" >> $GITHUB_OUTPUT
        else
          COMMIT_SHORT=$(git rev-parse --short HEAD)
          echo "version=$VERSION+git$COMMIT_SHORT" >> $GITHUB_OUTPUT
          echo "debian_version=$VERSION+git$COMMIT_SHORT-1" >> $GITHUB_OUTPUT
        fi
        
        # Debug output
        echo "Final version: $VERSION"
        echo "Final debian_version: $VERSION+git$COMMIT_SHORT-1"
    
    - name: Create debian structure
      run: |
        mkdir -p debian/source
        
        # Create debian/changelog with correct version
        cat > debian/changelog << EOF
        ucaresystem-core (${{ steps.version.outputs.debian_version }}) unstable; urgency=medium

          * Automated build from commit ${{ github.sha }}

         -- Salih Emin <salih-emin@ubuntu.com>  $(date -R)
        EOF
        
        # Create debian/control
        cat > debian/control << EOF
        Source: ucaresystem-core
        Section: admin
        Priority: optional
        Maintainer: Salih Emin <salih-emin@ubuntu.com>
        Build-Depends: debhelper (>= 10)
        Standards-Version: 4.5.0
        Homepage: https://github.com/Utappia/uCareSystem

        Package: ucaresystem-core
        Architecture: all
        Depends: curl, apt-transport-https, software-properties-common
        Description: All-in-one system maintenance tool for Ubuntu
         uCareSystem is a comprehensive system maintenance tool that automatically
         performs routine maintenance tasks including package updates, cache cleaning,
         and system optimization for Ubuntu and derivatives.
        EOF
        
        # Create debian/rules with proper tabs
        {
          echo '#!/usr/bin/make -f'
          echo ''
          echo '%:'
          echo -e '\tdh $@'
          echo ''
          echo 'override_dh_auto_install:'
          echo -e '\tinstall -D -m 755 src/ucaresystem-core debian/ucaresystem-core/usr/bin/ucaresystem-core'
          echo -e '\tinstall -D -m 755 src/launch-ucaresystemcore debian/ucaresystem-core/usr/bin/launch-ucaresystemcore'
          echo -e '\tinstall -D -m 644 assets/ucaresystem.desktop debian/ucaresystem-core/usr/share/applications/ucaresystem.desktop'
          echo -e '\tinstall -D -m 644 assets/ucaresystem.png debian/ucaresystem-core/usr/share/pixmaps/ucaresystemicon.png'
          echo -e '\tinstall -D -m 644 assets/ucaresystem-core.1 debian/ucaresystem-core/usr/share/man/man1/ucaresystem-core.1'
        } > debian/rules
        
        chmod +x debian/rules
        
        # Create other required files
        echo "10" > debian/compat
        echo "3.0 (native)" > debian/source/format
        
        # Copy postinst if it exists
        if [ -f "assets/postinst" ]; then
          cp assets/postinst debian/postinst
        fi
    
    - name: Remove the changelog update step
      run: |
        echo "Debian structure created successfully"
        ls -la debian/
    
    - name: Build package
      run: |
        dpkg-buildpackage -us -uc -b
    
    - name: Run lintian
      run: |
        lintian --info --display-info --display-experimental --pedantic ../ucaresystem-core_*.deb || true
    
    - name: List generated files
      run: |
        ls -la ../*.deb ../*.buildinfo ../*.changes || true
    
    - name: Copy artifacts to workspace
      run: |
        mkdir -p artifacts
        cp ../ucaresystem-core_*.deb artifacts/ || true
        cp ../ucaresystem-core_*.buildinfo artifacts/ || true
        cp ../ucaresystem-core_*.changes artifacts/ || true
        ls -la artifacts/
    
    - name: Upload DEB package
      uses: actions/upload-artifact@v4
      with:
        name: ucaresystem-deb-${{ steps.version.outputs.version }}
        path: artifacts/*
    
    - name: Upload to release (if release event)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/ucaresystem-core_${{ steps.version.outputs.debian_version }}_all.deb
    
    - name: Validate version format
      run: |
        echo "Validating version format..."
        echo "Version: ${{ steps.version.outputs.version }}"
        echo "Debian version: ${{ steps.version.outputs.debian_version }}"
        
        # Check if debian_version starts with a digit
        if [[ ! "${{ steps.version.outputs.debian_version }}" =~ ^[0-9] ]]; then
          echo "ERROR: Debian version does not start with a digit"
          exit 1
        fi
        
        echo "Version format is valid"